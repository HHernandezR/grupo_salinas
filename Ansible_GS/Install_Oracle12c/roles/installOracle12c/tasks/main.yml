- name: Crear Directorio Installacion
  file:
    path: "{{ oracle_installer_directory }}"
    state: directory
    force: yes

- name: Elimiar Template Existente
  file:
      path: db-install.rsp
      state: absent

# - name: Copiar Oracle DataBase ZIP
#   copy:
#     src: linuxx64_12201_database.zip
#     dest: /var/tmp/
#     owner: root
#     group: root
#     mode: 0777
#     force: yes
# - pause:
#     seconds: 2

# - name: Descomprimir DataBase ZIP
#   command: "unzip /var/tmp/linuxx64_12201_database.zip -d {{ oracle_installer_directory }}"

- name: Cambiar Permisos Directorio de Instalacion
  file:
    path: "{{ oracle_installer_directory }}"
    owner: "{{ usaurio_oracle }}"
    group: "{{ grupo_oracle }}"
    mode: "{{ permisos_installer_directory }}"
    recurse: yes

- name: Preparar Template de Instalacion
  template:
    src: db-install-12c.rsp.j2
    dest: /var/tmp/db-install.rsp

- name: Ejecutar Instalador Oracle
  shell: "{{ oracle_installer_directory }}/database/runInstaller -silent -waitforcompletion -ignoreSysPrereqs -responseFile /var/tmp/db-install.rsp"
  args:
    creates: "{{ oracle_home }}/bin/sqlplus"
  become: yes
  become_user: oracle
  register: command_result
  failed_when: "'Successfully Setup Software.' not in command_result.stdout_lines"

- name: Resultado de la Instalacion
  debug:
    var: command_result

- name: Setear Variable de Entorno Oracle Home
  lineinfile:
   dest: "/home/oracle/.bash_profile"
   regexp: "{{ item.regexp }}"
   line: "{{ item.line }}"
   insertbefore: "export PATH"
  loop:
    -
      regexp: ^ORACLE_HOME=
      line: "ORACLE_HOME={{ oracle_home }}"
    -
      regexp: PATH=\$ORACLE_HOME/bin
      line: PATH=$ORACLE_HOME/bin:$PATH
    -
      regexp: ^export ORACLE_HOME
      line: export ORACLE_HOME

- name: Ejecutar Post-Installation Scripts
  become: yes
  become_user: root
  shell: "{{ item }}"
  loop:
    - "{{ oracle_inventory }}/orainstRoot.sh"
    - "{{ oracle_home }}/root.sh"
